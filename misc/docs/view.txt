Система поддерживает рабуту с несколькими темами, наследование тем и лёгкое переключение между ними.

Для настройки тем используется конфигурационный файл модуля Cmf\View
<dir>resources/theme</dir> - путь к папке с темами
<currentTheme>themeName</currentTheme> - выбранная тема. Если указать значение MODULE - то для каждого модуля будет использоваться собственная тема
(например Menu/resources/theme).

Если система не может найти какой-либо шаблон в текущей теме - она попытается найти его в теме от которой наследуется текущая.

Для создания шаблонов Вы можете использовать любой шаблонизатор на ваш выбор. Для этого нужно создать свой адаптер для шаблонизатора.
Вместе с модулем View постовляются адаптеры для шаблонизаторов Twig, Smarty, так же можно использовать в качестве шаблонов *.php файлы
Каждый модуль может использовыть любой из шаблонизаторов на выбор. Настройка шаблонизатора для темы/модуля осцществляется в файлах theme.cnf.xml
<engine>Cmf\View\Engine\Twig</engine> - указывает какой движок импользовать для темы.

Для унификации вывода используются лэйауты (layout).

Стандартный лэйаут предоставляется компонентом Cmf\Controller\Response\Html\Layout
Этот лэйаут может быть переопределён для каждого конкретного модуля, контроллера или действия (смотреть наследование шаблонов).

Для переопределения лэйаута для всего модуля создайте файл  [ModuleName]/layout.***
Для переопределения лэйаута для контроллера и всех его действий создайте файл  [ModuleName]/Controller/[ControllerName]/layout.***
Для переопределения лэйаута для одного действия создайте файл [ModuleName]/Controller/[ControllerName]/action/[actionName]/layout.***


Отображение шаблонов
Система использует компонентную архитектуру. В качестве компонента можно использовать любой экземпляр любого класса.
Нужно лишь создать для него файл шаблона, который будет храниться в файле, название и путь которого определяется пространством имён и цепочкой наследования класса породившего экземпляр (компонент).
Можно сказать, что шаблоны наследуются подобно классам.

Алгоритм поиска шаблона для компонента, либо произвольного файла:

1. Ищем для пути соответствующего имени класса (компонента)
2. Если шаблон не найден - ищем шаблон для родительского класса
3. п.2 повторяется пока не будет найден шаблон либо пока ViewProcessor не дойдёт до базового класса.
4. Если шаблон не найден в выбранной теме ищем в родительской теме.
5. Если шаблон остутствует герерируется Exception
